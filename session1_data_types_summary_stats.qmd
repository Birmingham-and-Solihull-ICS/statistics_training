---
title: "Session 1: Data types and summary statistics"
date: "2025-04-04"
author: Chris Mainey
date-format: "D MMMM YYYY"
format: bsol-html
execute:
  echo: false
  cache: true              # Cache results
  warning: false           # Do not include warnings in rendered output
  error: false             # Do not include errors in the output
  feeze: auto              # Re-compute previously generated computational output only in case their source file changes
crossref:
  fig-title: '**Figure**'
  fig-labels: arabic
---

```{r}
#| label: load-libraries
#| warning: false
#| output: false
#| echo: false


# Load the required library
library(ggplot2)
library(plotly)
library(tidyverse)
library(DT)
library(BSOLTheme)

theme_set(
  theme_bsol()
)

```

# Introduction 
## Data 

::: {.grid}

:::{.g-col-6}

+ We are not interested simply in measurements, or individual datum.

+ We are usually trying to answer a question / learn something / make a decision

+ When use data, we need to bring some order to it

+ We will consider structured data 

:::

:::{.g-col-6}
<a title="Longlivetheux, CC BY-SA 4.0 &lt;https://creativecommons.org/licenses/by-sa/4.0&gt;, via Wikimedia Commons" href="https://commons.wikimedia.org/wiki/File:DIKW_Pyramid.svg"><img width="256" alt="The pyramid of knowledge with a base of data, the next layer built of information, then knowledge and finally wisdom at the peak." src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/06/DIKW_Pyramid.svg/256px-DIKW_Pyramid.svg.png?20220726215947"></a>
:::

:::



## Data types

Data can take various forms:
E.g. measurements, grouping factors, estimates, observations etc.

Different in terms of:

 + Storage
 + Methods for summary/processing
 + Interpretation
 + Data-generating mechanism


A few major groups of data types:

+ Numeric
+ Binary
+ Categorical
  
<br>

::: panel-tabset

#### Numeric

+ <span style="color:DodgerBlue ; font-weight:bold;"> Continuous:</span> values that can be constantly divided with a possible number in between

  + E.g. height of a person could be 172, 173 or 172.5 cm
  
  + <span style="color:SandyBrown; font-size:18px;"> Examples in NHS: </span>  physiological measurements like blood pressure


+ <span style="color:DodgerBlue ; font-weight:bold;"> Discrete:</span> values that can only take whole numbers, usually obtained by counting.

  + E.g. Number of patients seen in a clinic could be 35 or 36 but not 35.5
  
  + <span style="color:SandyBrown; font-size:18px;"> Examples in NHS: </span> counts of patients, waiting time measured in whole minutes, length of stay measured in days (like HED/HES), number of patient episodes



#### Binary

+ Exclusive two state variable

  + E.g. 0/1, yes/no, TRUE/FALSE
  
  + <span style="color:SandyBrown; font-size:18px;"> Examples in NHS: </span>  Patient dead or alive?, TRUE or FALSE answer to survey, patient status for a genetic marker


Counting binary events becomes ___discrete numeric___.

May chose to only count the events, e.g. 'deaths' not 'survives'

<br>
<img src = "./assets/img/xkcd.png" class="center">

<span class="center" style="font-size:12px; line-height: 1.2em; font-style: italic;"> <i> Taken from: </i> xkcd https://xkcd.com/605/ </span>



#### Categorical


+ <span style="color:DodgerBlue ; font-weight:bold;"> Nominal:</span> Categories without any notion of order
  + E.g. Hair Colour, Brand of car, Country of residence
  + <span style="color:SandyBrown; font-size:18px;"> Examples in NHS: </span>  Ethnicity, Admission method, Treatment speciality 

<br>

+ <span style="color:DodgerBlue ; font-weight:bold;"> Ordinal:</span> Categories with order, but not linear like numeric 
  + E.g. Survey answers ‘Good, OK & Bad’.  There is order, but ‘OK’ ≠ ‘Bad’ x 2 and ‘Good’ ≠ ‘Bad’ + ‘OK’
  + <span style="color:SandyBrown; font-size:18px;"> Examples in NHS: </span> Cancer stage, self-assessed patient answers like ‘is your health poor, OK or good,’  Age-groups <1, 1-16, 17-40 etc.

::::

# Summarising Data
<br><br>
___“Dear informatics, I would like age of all patients admitted as an emergency to general medicine in December?”___

<br><br>

```{r ages, echo=FALSE, cache=TRUE}
ages<-c(75,81,59,70,64,67,66,54,68,72,80,66,70,76,75,52,59,52,86,56,51,59,72,61,53,72,75,69,64,55,74,54,61,74,86,53,68,69,76,
        58,59,79,59,69,91,55,59,68,58,70,68,60,89,54,85,76,56,56,84,91,90,87,90,85,54,76,91,79,53,62,72,69,75,76,76,76,63,85,
        76,85,67,63,91,63,64,69,63,60,57,83,69,60,58,70,59,85,68,85,56,79,85,76,76,73,60,87,57,67,72,92,58,55,54,71,90,55,58,
        59,63,77,85,77,53,66,73,53,79,70,70,77,56,65,85,64,74,66,74,59,68,79,66,56,68,63,66,66,68,70,64,72,56,83,53,69,67,77,
        68,63,73,57,86,52,75,78,76,61,71,77,64,62,77,69,69,66,85,65,61,72,69,73,53,77,54,56,72,70,69,67,62,78,58,54,69,76,86,
        59,80,84,56,78,75,57,68,91,91)

ages
```



## How would you answer that question?

What is the question really asking?  It's quite unlikely that sending a list of numbers really answerers the question in a useful way.  They requester may have various different questions, but they probably want some idea of the range, but also how the people are distributed across different ages.

- How might we show this in a better way?

- Summary figures?


<br>

## Visualising data types:

- Scatter plots
- Stem & leaf plot
- Histogram or Kernel Density (sounds more impressive than it is)
- Box plot




## Scatter plots  

::: {.grid}

:::{.g-col-6}
Plots and `x` variable by a `y` variable by point

#### Why doesn't this help?

- We've only got one variable, not two
- No summary information
- We want to see some kind of distribution 


:::

:::{.g-col-6}
```{r scatter}
plot(ages)
```
:::

:::

## Stem & Leaf Plots

::: {.grid}

:::{.g-col-6}


- Easy to do by hand or on computer

- Decide on grouping size (5- year in example below)

- Major units on left, minor on right 

- We essentially create a tally

:::

:::{.g-col-6}

```{r stem}
#| message: false
stem(ages, scale = 0.5)

```
:::
:::

## Histograms and Bar Charts

::: {.grid}

:::{.g-col-6}

- Plot of binned counts

- Good way to visualise distribution

- Bin sizes can vary & do not have to be equal

- Bar charts are related, but do not share the ‘binning’ idea. Can be used with categorical

:::

:::{.g-col-6}

```{r hist1}
ggplot(as.data.frame(ages), aes(x = ages)) +
  geom_histogram(col = bsol_theme_cols(2), 
                 fill = bsol_theme_cols(2), alpha = 0.6, binwidth = 1) +
  labs(title = 'Histogram of Ages, single-year bins')

```

:::
:::


### Histograms and Bar Charts (2) 


```{r hist2}
library(gridExtra)
grid.arrange(

  ggplot(as.data.frame(ages), aes(x = ages)) +
  geom_histogram(col = bsol_theme_cols(3), fill = bsol_theme_cols(3)
                 , alpha=0.5, binwidth = 2) +
  labs(title = 'Histogram of Ages, two-year bins')
,
ggplot(as.data.frame(ages), aes(x = ages)) +
  geom_histogram(aes(y =..density..), col = bsol_theme_cols(3)
                 , fill = bsol_theme_cols(3), alpha = 0.5
                 , breaks = c(50, 5,60,65,70,75,80,95)) +
  labs(title='Histogram of Ages, variable bins')
, ncol = 2)

```


## Kernel Density

::: {.grid}

:::{.g-col-6}

```{r kernel}
ggplot(as.data.frame(ages), aes(x = ages)) +
  geom_density( col = bsol_theme_cols(4), 
                fill = bsol_theme_cols(4), alpha = 0.5) +
  labs(title = 'Density of Ages') +
  theme_bsol()

```
:::

:::{.g-col-6}

- Similar to a smoothed histogram

- Plots the probability density of data rather than counts values

- Conceptually harder, but nicer visualisation

:::
:::





```{=html}

<div class="footer-banner">
  <img src="_extensions/Birmingham-and-Solihull-ICS/bsol/Logo/ML_logo.png" alt="ML Logo" class="footer-logo left-logo" />
  <img src="_extensions/Birmingham-and-Solihull-ICS/bsol/Logo/ICB_logo.png" alt="ICB Logo" class="footer-logo right-logo" />
</div>